// Note: This file is automatically generated.
//       It will be overwritten sooner or later.

import Testing
import SwiftGmp

@Test func basics3Test() {
    let calculator = Calculator(precision: 20)

    calculator.evaluateString("sqr(4.0)")
    #expect(calculator.string == "16")
    calculator.evaluateString("sqr(2.0)")
    #expect(calculator.string == "4")
    calculator.evaluateString("cubed(5.0)")
    #expect(calculator.string == "125")
    calculator.evaluateString("cubed(2.0)")
    #expect(calculator.string == "8")
    calculator.evaluateString("exp(1.0)")
    #expect(calculator.double.similar(to: 2.71828182))
    calculator.evaluateString("exp(2.0)")
    #expect(calculator.double.similar(to: 7.38905609))
    calculator.evaluateString("exp10(1.0)")
    #expect(calculator.string == "10")
    calculator.evaluateString("exp10(2.0)")
    #expect(calculator.string == "100")
    calculator.evaluateString("1.0 ±")
    #expect(calculator.string == "-1")
    calculator.evaluateString("-1.0 ±")
    #expect(calculator.string == "1")
    calculator.evaluateString("rez(2.0)")
    #expect(calculator.string == "0.5")
    calculator.evaluateString("rez(4.0)")
    #expect(calculator.string == "0.25")
    calculator.evaluateString("fac(5.0)")
    #expect(calculator.string == "120")
    calculator.evaluateString("fac(3.0)")
    #expect(calculator.string == "6")
    calculator.evaluateString("0")
    #expect(calculator.string == "0")
    calculator.evaluateString("pi")
    #expect(calculator.double.similar(to: 3.14159265))
    calculator.evaluateString("e")
    #expect(calculator.double.similar(to: 2.71828182))
    calculator.evaluateString("abs(-3.0)")
    #expect(calculator.string == "3")
    calculator.evaluateString("sqrt(9.0)")
    #expect(calculator.string == "3")
    calculator.evaluateString("sqrt3(8.0)")
    #expect(calculator.double.similar(to: 2))
    calculator.evaluateString("sqrt(2.0)")
    #expect(calculator.double.similar(to: 1.41421356))
    calculator.evaluateString("zeta(3.0)")
    #expect(calculator.double.similar(to: 1.20205690))
    calculator.evaluateString("ln(1.0)")
    #expect(calculator.string == "0")
    calculator.evaluateString("ln(2.0)")
    #expect(calculator.double.similar(to: 0.69314718))
    calculator.evaluateString("log10(10.0)")
    #expect(calculator.string == "1")
    calculator.evaluateString("log10(100.0)")
    #expect(calculator.string == "2")
    calculator.evaluateString("log2(8.0)")
    #expect(calculator.string == "3")
    calculator.evaluateString("log2(16.0)")
    #expect(calculator.string == "4")
}
